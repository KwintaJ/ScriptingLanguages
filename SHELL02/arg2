#!/bin/bash 
# Jan Kwinta
#
# 17.10.2025
#
# Problem SHELL02
# Program 2
set -e

# obslugiwane krotkie i dlugie opcje
SHORT_OPTS="i:o:qabcdefghijklmnoprstuvwxyz"
LONG_OPTS="help"

# parsowanie opcji
PARSED=$(getopt --options="$SHORT_OPTS" --longoptions="$LONG_OPTS" --name "$0" -- "$@") || exit 1
eval set -- "$PARSED"

options=($(printf '0 %.0s' {1..26}))
inputFile=""
outputFile=""

# Przetwarzanie opcji
while true; do
    case "$1" in
        --help)
            echo "help"
            exit 1
            ;;
        -q)
            # jesli jest -q zakonczenie programu
            echo "Unsupported option: -q"
            exit 2
            ;;
        -i)
            # jesli jest opcja -i zapamietujemy nazwe pliku
            options[$(( $(printf "%d" "'i") - 97 ))]=1
            inputFile="$2"
            shift 2
            ;;
        -o)
            # jesli jest opcja -o zapamietujemy nazwe pliku
            options[$(( $(printf "%d" "'o") - 97 ))]=1
            outputFile="$2"
            shift 2
            ;;
        -[a-hj-np-z])
            flag="${1:1}"
            options[$(( $(printf "%d" "'$flag") - 97 ))]=1
            shift
            ;;
        --)
            shift
            break
            ;;
    esac
done

# jako nazwa pliku zostala wczytana flaga
if [[ $inputFile == -* || $outputFile == -* ]] ; then
    echo "-i -o options require a filename"
    exit 1
fi

# wypisanie obecnych opcji
for ((i = 0; i < 26; i++)); do
    letter=$(printf "\\$(printf '%03o' $((97 + i)))")

    if (( ${options[i]} == 1 )); then
        if [[ $letter == "i" ]]; then
            echo "-i present and set to \"$inputFile\""
        elif [[ $letter == "o" ]]; then
            echo "-o present and set to \"$outputFile\""
        else
            echo "-$letter present"
        fi
    fi
done

# wypisanie argumentÃ³w
# argNum=$#
# optNum=$OPTIND
# if (( $((argNum - optNum + 1)) > 0 )) ; then
#     echo "Arguments are:"
#     for i in $(seq $optNum $argNum) ; do
#         ind=$((i - optNum + 1))
#         echo "\$${ind} = ${!i}"
#     done
# fi